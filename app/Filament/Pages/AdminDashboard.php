<?php

namespace App\Filament\Pages;

use Filament\Pages\Dashboard as BaseDashboard;
use App\Filament\Widgets\ProcesosStatsOverview;
use App\Filament\Widgets\ProcesosPorEstadoChart;
use App\Filament\Widgets\ProcesosPorFaseChart;
use App\Filament\Widgets\ProcesosPorMesChart;
use App\Filament\Widgets\ProcesosPorProveedorChart;
use App\Filament\Widgets\ProcesosPorResponsableChart;
use App\Filament\Widgets\ProcesosPorDuracionChart;
use App\Filament\Widgets\ProcesosAtrasadosChart;

class AdminDashboard extends BaseDashboard
{
    protected static ?string $navigationIcon = 'lucide-home';
    protected static ?string $navigationLabel = 'Dashboard Admin';
    protected static ?string $title = 'ðŸ“Š Panel de EstadÃ­sticas';

    /** ðŸ”¹ Solo visible para Admin */
    public static function canView(): bool
    {
        return auth()->check() && auth()->user()->hasRole('Admin');
    }

    /** ðŸ”¹ Orden y disposiciÃ³n de los widgets */
    public function getWidgets(): array
    {
        return [
            // ðŸŸ¦ Fila 1 (stats â†’ fila completa)
            ProcesosStatsOverview::class,

            ProcesosPorResponsableChart::class,

            // ðŸŸ¦ Fila 2 (estado y fase â†’ 2 columnas cada uno)
            ProcesosPorEstadoChart::class,
            ProcesosPorFaseChart::class,

            // ðŸŸ¦ Fila 3 (lÃ­nea de tiempo â†’ fila completa)
            ProcesosPorMesChart::class,

            // ðŸŸ¦ Fila 4 (comparativas â†’ 2 columnas cada uno)
          
            

            // ðŸŸ¦ Fila 5 (indicadores especiales â†’ 2 columnas cada uno)
            ProcesosPorDuracionChart::class,
            ProcesosAtrasadosChart::class,

            ProcesosPorProveedorChart::class,
        ];
    }

    /** ðŸ”¹ Columnas globales */
    public function getColumns(): int
    {
        return 4; // âœ… grid de 4 columnas â†’ mÃ¡s flexible y ordenado
    }
}